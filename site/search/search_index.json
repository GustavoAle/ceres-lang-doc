{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Ceres Documentation Ceres is a semi-oop simple programming language mainly targeting the S3MC RISC processor. It's main goal is to avoid the use of assembly and machine code during the development and testing of the S3MC processors. This goal will be gradually extended to provide a high-level language for newborn RISC processors since LLVM and other compiler toolchains are relatively hard to work with. Author Author: Gustavo Ale GitHub: https://github.com/GustavoAle Email: gustavo.engca@gmail.com Credits Tom Niemann - Lex & Yacc tutorial . The first versions of the lexer and parser are strongly based on Niemann's examples presented in the book.","title":"Home"},{"location":"#ceres-documentation","text":"Ceres is a semi-oop simple programming language mainly targeting the S3MC RISC processor. It's main goal is to avoid the use of assembly and machine code during the development and testing of the S3MC processors. This goal will be gradually extended to provide a high-level language for newborn RISC processors since LLVM and other compiler toolchains are relatively hard to work with.","title":"Ceres Documentation"},{"location":"#author","text":"Author: Gustavo Ale GitHub: https://github.com/GustavoAle Email: gustavo.engca@gmail.com","title":"Author"},{"location":"#credits","text":"Tom Niemann - Lex & Yacc tutorial . The first versions of the lexer and parser are strongly based on Niemann's examples presented in the book.","title":"Credits"},{"location":"examples/","text":"Examples Hello world Since the S3MC processor currently run on a FPGA the basic input and output is given by the serial port. #extern { \"serial.cr\" } sub main() { /*init serial with 115200 bps*/ IO.init(115200) IO.print(\"hello world\\n\") } Fibonacci ... fun fib(n) { if(n == 1 or n == 2) { return 1; } return fib(n-1)+fib(n-2); } ...","title":"Examples"},{"location":"examples/#examples","text":"","title":"Examples"},{"location":"examples/#hello-world","text":"Since the S3MC processor currently run on a FPGA the basic input and output is given by the serial port. #extern { \"serial.cr\" } sub main() { /*init serial with 115200 bps*/ IO.init(115200) IO.print(\"hello world\\n\") }","title":"Hello world"},{"location":"examples/#fibonacci","text":"... fun fib(n) { if(n == 1 or n == 2) { return 1; } return fib(n-1)+fib(n-2); } ...","title":"Fibonacci"}]}